// Mocks generated by Mockito 5.4.4 from annotations
// in client/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:client/core/failure/failure.dart' as _i7;
import 'package:client/features/detail_actor/data/data_sources/local/detail_actor_local_datasource_impl.dart'
    as _i13;
import 'package:client/features/detail_actor/data/data_sources/remote/detail_actor_remote_datasource_impl.dart'
    as _i11;
import 'package:client/features/detail_actor/domain/entity/detail_actor_entity.dart'
    as _i3;
import 'package:client/features/detail_actor/domain/repository/detail_actor_repository_impl.dart'
    as _i14;
import 'package:client/features/genre_list/data/data_source/local/genre_local_datasource_impl.dart'
    as _i9;
import 'package:client/features/genre_list/data/data_source/remote/genre_remote_datasource_impl.dart'
    as _i10;
import 'package:client/features/genre_list/domain/entity/genre_entity.dart'
    as _i8;
import 'package:client/features/genre_list/domain/repositories/genre_repository_impl.dart'
    as _i5;
import 'package:client/features/movie/domain/entity/movie.dart' as _i12;
import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailActorEntity_1 extends _i1.SmartFake
    implements _i3.DetailActorEntity {
  _FakeDetailActorEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_2 extends _i1.SmartFake implements _i4.BaseOptions {
  _FakeBaseOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_3 extends _i1.SmartFake
    implements _i4.HttpClientAdapter {
  _FakeHttpClientAdapter_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_4 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_5 extends _i1.SmartFake implements _i4.Interceptors {
  _FakeInterceptors_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_6<T1> extends _i1.SmartFake implements _i4.Response<T1> {
  _FakeResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GenreRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockGenreRepositoryImpl extends _i1.Mock
    implements _i5.GenreRepositoryImpl {
  MockGenreRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, void>> clearGenreList() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearGenreList,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, void>>.value(
            _FakeEither_0<_i7.Failure, void>(
          this,
          Invocation.method(
            #clearGenreList,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, void>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.GenreEntity>>> getGenreList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getGenreList,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.GenreEntity>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.GenreEntity>>(
          this,
          Invocation.method(
            #getGenreList,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.GenreEntity>>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.GenreEntity>>> getGenreListByIds(
          List<int>? idsGenre) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGenreListByIds,
          [idsGenre],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.GenreEntity>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.GenreEntity>>(
          this,
          Invocation.method(
            #getGenreListByIds,
            [idsGenre],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.GenreEntity>>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, void>> saveGenreList(
          {required List<_i8.GenreEntity>? genres}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGenreList,
          [],
          {#genres: genres},
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, void>>.value(
            _FakeEither_0<_i7.Failure, void>(
          this,
          Invocation.method(
            #saveGenreList,
            [],
            {#genres: genres},
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, void>>);

  @override
  _i2.Either<_i7.Failure, List<_i8.GenreEntity>> getSavedGenreList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedGenreList,
          [],
        ),
        returnValue: _FakeEither_0<_i7.Failure, List<_i8.GenreEntity>>(
          this,
          Invocation.method(
            #getSavedGenreList,
            [],
          ),
        ),
      ) as _i2.Either<_i7.Failure, List<_i8.GenreEntity>>);

  @override
  _i2.Either<_i7.Failure, List<_i8.GenreEntity>> getSavedGenreListByIds(
          List<int>? idsGenre) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedGenreListByIds,
          [idsGenre],
        ),
        returnValue: _FakeEither_0<_i7.Failure, List<_i8.GenreEntity>>(
          this,
          Invocation.method(
            #getSavedGenreListByIds,
            [idsGenre],
          ),
        ),
      ) as _i2.Either<_i7.Failure, List<_i8.GenreEntity>>);
}

/// A class which mocks [GenreLocalDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockGenreLocalDataSourceImpl extends _i1.Mock
    implements _i9.GenreLocalDataSourceImpl {
  MockGenreLocalDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> clearGenres() => (super.noSuchMethod(
        Invocation.method(
          #clearGenres,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  List<_i8.GenreEntity> getSavedListGenres() => (super.noSuchMethod(
        Invocation.method(
          #getSavedListGenres,
          [],
        ),
        returnValue: <_i8.GenreEntity>[],
      ) as List<_i8.GenreEntity>);

  @override
  bool isSavedGenres() => (super.noSuchMethod(
        Invocation.method(
          #isSavedGenres,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<void> saveGenres({required List<_i8.GenreEntity>? genres}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGenres,
          [],
          {#genres: genres},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  List<_i8.GenreEntity> getGenreListByIds(List<int>? idsGenre) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGenreListByIds,
          [idsGenre],
        ),
        returnValue: <_i8.GenreEntity>[],
      ) as List<_i8.GenreEntity>);
}

/// A class which mocks [GenreRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockGenreRemoteDataSourceImpl extends _i1.Mock
    implements _i10.GenreRemoteDataSourceImpl {
  MockGenreRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i8.GenreEntity>> getGenreList() => (super.noSuchMethod(
        Invocation.method(
          #getGenreList,
          [],
        ),
        returnValue:
            _i6.Future<List<_i8.GenreEntity>>.value(<_i8.GenreEntity>[]),
      ) as _i6.Future<List<_i8.GenreEntity>>);

  @override
  _i6.Future<List<_i8.GenreEntity>> getGenreListByIds(List<int>? idsGenre) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGenreListByIds,
          [idsGenre],
        ),
        returnValue:
            _i6.Future<List<_i8.GenreEntity>>.value(<_i8.GenreEntity>[]),
      ) as _i6.Future<List<_i8.GenreEntity>>);
}

/// A class which mocks [DetailActorRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailActorRemoteDataSourceImpl extends _i1.Mock
    implements _i11.DetailActorRemoteDataSourceImpl {
  MockDetailActorRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.DetailActorEntity> getDetailActor({required int? actorID}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailActor,
          [],
          {#actorID: actorID},
        ),
        returnValue:
            _i6.Future<_i3.DetailActorEntity>.value(_FakeDetailActorEntity_1(
          this,
          Invocation.method(
            #getDetailActor,
            [],
            {#actorID: actorID},
          ),
        )),
      ) as _i6.Future<_i3.DetailActorEntity>);

  @override
  _i6.Future<List<_i12.MovieEntity>> getCastMovie({required int? actorID}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCastMovie,
          [],
          {#actorID: actorID},
        ),
        returnValue:
            _i6.Future<List<_i12.MovieEntity>>.value(<_i12.MovieEntity>[]),
      ) as _i6.Future<List<_i12.MovieEntity>>);
}

/// A class which mocks [DetailActorLocalDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailActorLocalDataSourceImpl extends _i1.Mock
    implements _i13.DetailActorLocalDataSourceImpl {
  MockDetailActorLocalDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void deleteDetailActor({required int? actorID}) => super.noSuchMethod(
        Invocation.method(
          #deleteDetailActor,
          [],
          {#actorID: actorID},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void saveDetailActor({required _i3.DetailActorEntity? detailActor}) =>
      super.noSuchMethod(
        Invocation.method(
          #saveDetailActor,
          [],
          {#detailActor: detailActor},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.DetailActorEntity getSavedDetailActor({required int? actorID}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedDetailActor,
          [],
          {#actorID: actorID},
        ),
        returnValue: _FakeDetailActorEntity_1(
          this,
          Invocation.method(
            #getSavedDetailActor,
            [],
            {#actorID: actorID},
          ),
        ),
      ) as _i3.DetailActorEntity);
}

/// A class which mocks [DetailActorRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailActorRepositoryImpl extends _i1.Mock
    implements _i14.DetailActorRepositoryImpl {
  MockDetailActorRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<_i7.Failure, void> deleteDetailActor({required int? actorID}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteDetailActor,
          [],
          {#actorID: actorID},
        ),
        returnValue: _FakeEither_0<_i7.Failure, void>(
          this,
          Invocation.method(
            #deleteDetailActor,
            [],
            {#actorID: actorID},
          ),
        ),
      ) as _i2.Either<_i7.Failure, void>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, _i3.DetailActorEntity>>
      getLocalDetailActor({required int? actorID}) => (super.noSuchMethod(
            Invocation.method(
              #getLocalDetailActor,
              [],
              {#actorID: actorID},
            ),
            returnValue: _i6
                .Future<_i2.Either<_i7.Failure, _i3.DetailActorEntity>>.value(
                _FakeEither_0<_i7.Failure, _i3.DetailActorEntity>(
              this,
              Invocation.method(
                #getLocalDetailActor,
                [],
                {#actorID: actorID},
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, _i3.DetailActorEntity>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, _i3.DetailActorEntity>>
      getRemoteDetailActor({required int? actorID}) => (super.noSuchMethod(
            Invocation.method(
              #getRemoteDetailActor,
              [],
              {#actorID: actorID},
            ),
            returnValue: _i6
                .Future<_i2.Either<_i7.Failure, _i3.DetailActorEntity>>.value(
                _FakeEither_0<_i7.Failure, _i3.DetailActorEntity>(
              this,
              Invocation.method(
                #getRemoteDetailActor,
                [],
                {#actorID: actorID},
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, _i3.DetailActorEntity>>);

  @override
  _i2.Either<_i7.Failure, void> saveDetailActor(
          {required _i3.DetailActorEntity? detailActor}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDetailActor,
          [],
          {#detailActor: detailActor},
        ),
        returnValue: _FakeEither_0<_i7.Failure, void>(
          this,
          Invocation.method(
            #saveDetailActor,
            [],
            {#detailActor: detailActor},
          ),
        ),
      ) as _i2.Either<_i7.Failure, void>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i4.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_2(
          this,
          Invocation.getter(#options),
        ),
      ) as _i4.BaseOptions);

  @override
  set options(_i4.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_3(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i4.HttpClientAdapter);

  @override
  set httpClientAdapter(_i4.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_4(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_5(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i4.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i4.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i4.Options? options,
    _i4.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i4.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i4.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i4.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i6.Future<_i4.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<dynamic>>);

  @override
  _i6.Future<_i4.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i4.ProgressCallback? onReceiveProgress,
    _i4.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i4.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i6.Future<_i4.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<dynamic>>);

  @override
  _i6.Future<_i4.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i4.CancelToken? cancelToken,
    _i4.Options? options,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i4.CancelToken? cancelToken,
    _i4.Options? options,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);

  @override
  _i6.Future<_i4.Response<T>> fetch<T>(_i4.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i6.Future<_i4.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i6.Future<_i4.Response<T>>);
}
